{"version":3,"file":"static/webpack/static/development/pages/index.js.75591cbeb183130ad53d.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from '../components/Layout';\nimport Link from 'next/link';\nimport 'isomorphic-unfetch';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {data, error} = useSWR('https://api.tvmaze.com/search/showsgg?q=batman', fetcher);\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n  console.log(data)\n  let shows = [], emptyData = '';\n  if (data){\n    emptyData = '';\n    shows = data.map(entry => entry.show)\n  } else {\n    emptyData = 'Loading...';\n  }\n\n  if (error) emptyData = 'Failed to fetch the quote.';\n\n  return (\n    <Layout>\n      <h1>Batman TV Shows</h1>\n      <ul>\n        {shows.map(show => (\n          <li key={show.id}>\n            <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n              <a>{show.name}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <p>{emptyData}</p>\n      <style jsx>{`\n        h1,\n        a {\n          font-family: 'Arial';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n          margin: 5px 0;\n        }\n\n        a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        a:hover {\n          opacity: 0.6;\n        }\n      `}</style>\n    </Layout>)\n}\n\n/*Index.getInitialProps = async function() {\n\n  const { res, error } = await getData();\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};*/\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAqCA;AAEA;AACA;;;;;;;;;;;;;A","sourceRoot":""}