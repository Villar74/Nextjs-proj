{"ast":null,"code":"var _jsxFileName = \"/Users/dzhafarov.maxim/Projects/nextjs/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport 'isomorphic-unfetch';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSWR('https://api.tvmaze.com/search/shows?q=batman', fetcher); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  console.log(data);\n  let shows = [],\n      emptyData = '';\n\n  if (data) {\n    emptyData = '';\n    shows = data.map(entry => entry.show);\n  } else {\n    emptyData = 'Loading...';\n  } //if (!data) quote = 'Loading...';\n  //if (error) quote = 'Failed to fetch the quote.';\n\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-344512576\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    className: \"jsx-344512576\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, shows.map(show => __jsx(\"li\", {\n    key: show.id,\n    className: \"jsx-344512576\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: `/p/${show.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"jsx-344512576\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, show.name))))), __jsx(_JSXStyle, {\n    id: \"344512576\",\n    __self: this\n  }, \"h1.jsx-344512576,a.jsx-344512576{font-family:'Arial';}ul.jsx-344512576{padding:0;}li.jsx-344512576{list-style:none;margin:5px 0;}a.jsx-344512576{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-344512576:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kemhhZmFyb3YubWF4aW0vUHJvamVjdHMvbmV4dGpzL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFDa0IsQUFJK0IsQUFJVixBQUlNLEFBS0ssQUFLVCxVQWJkLEVBY0EsSUFWZSxJQVJmLFNBU0EscUJBSWEsV0FDYiIsImZpbGUiOiIvVXNlcnMvZHpoYWZhcm92Lm1heGltL1Byb2plY3RzL25leHRqcy9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCAnaXNvbW9ycGhpYy11bmZldGNoJztcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcblxuZnVuY3Rpb24gZmV0Y2hlcih1cmwpIHtcbiAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyID0+IHIuanNvbigpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XG4gIGNvbnN0IHtkYXRhLCBlcnJvcn0gPSB1c2VTV1IoJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJywgZmV0Y2hlcik7XG4gIC8vIFRoZSBmb2xsb3dpbmcgbGluZSBoYXMgb3B0aW9uYWwgY2hhaW5pbmcsIGFkZGVkIGluIE5leHQuanMgdjkuMS41LFxuICAvLyBpcyB0aGUgc2FtZSBhcyBgZGF0YSAmJiBkYXRhLmF1dGhvcmBcbiAgY29uc29sZS5sb2coZGF0YSlcbiAgbGV0IHNob3dzID0gW10sIGVtcHR5RGF0YSA9ICcnO1xuICBpZiAoZGF0YSl7XG4gICAgZW1wdHlEYXRhID0gJyc7XG4gICAgc2hvd3MgPSBkYXRhLm1hcChlbnRyeSA9PiBlbnRyeS5zaG93KVxuICB9IGVsc2Uge1xuICAgIGVtcHR5RGF0YSA9ICdMb2FkaW5nLi4uJztcbiAgfVxuXG4gIC8vaWYgKCFkYXRhKSBxdW90ZSA9ICdMb2FkaW5nLi4uJztcbiAgLy9pZiAoZXJyb3IpIHF1b3RlID0gJ0ZhaWxlZCB0byBmZXRjaCB0aGUgcXVvdGUuJztcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8aDE+QmF0bWFuIFRWIFNob3dzPC9oMT5cbiAgICAgIDx1bD5cbiAgICAgICAge3Nob3dzLm1hcChzaG93ID0+IChcbiAgICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Nob3cuaWR9YH0+XG4gICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICkpfVxuICAgICAgPC91bD5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgaDEsXG4gICAgICAgIGEge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgICB9XG5cbiAgICAgICAgdWwge1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIH1cblxuICAgICAgICBsaSB7XG4gICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgICBtYXJnaW46IDVweCAwO1xuICAgICAgICB9XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiBibHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgYTpob3ZlciB7XG4gICAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+KVxufVxuXG4vKkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xuXG4gIGNvbnN0IHsgcmVzLCBlcnJvciB9ID0gYXdhaXQgZ2V0RGF0YSgpO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICBjb25zb2xlLmxvZyhgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xuXG4gIHJldHVybiB7XG4gICAgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpXG4gIH07XG59OyovXG5cbiJdfQ== */\\n/*@ sourceURL=/Users/dzhafarov.maxim/Projects/nextjs/pages/index.js */\"));\n}\n/*Index.getInitialProps = async function() {\n\n  const { res, error } = await getData();\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};*/","map":{"version":3,"sources":["/Users/dzhafarov.maxim/Projects/nextjs/pages/index.js"],"names":["Layout","Link","useSWR","fetcher","url","fetch","then","r","json","Index","data","error","console","log","shows","emptyData","map","entry","show","id","name"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBT,MAAM,CAAC,8CAAD,EAAiDC,OAAjD,CAA5B,CAD8B,CAE9B;AACA;;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAII,KAAK,GAAG,EAAZ;AAAA,MAAgBC,SAAS,GAAG,EAA5B;;AACA,MAAIL,IAAJ,EAAS;AACPK,IAAAA,SAAS,GAAG,EAAZ;AACAD,IAAAA,KAAK,GAAGJ,IAAI,CAACM,GAAL,CAASC,KAAK,IAAIA,KAAK,CAACC,IAAxB,CAAR;AACD,GAHD,MAGO;AACLH,IAAAA,SAAS,GAAG,YAAZ;AACD,GAX6B,CAa9B;AACA;;;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUE,IAAI,IACb;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,IAAT,CADF,CADF,CADD,CADH,CAFF;AAAA;AAAA;AAAA,w5FADF;AAqCD;AAED","sourcesContent":["import Layout from '../components/Layout';\nimport Link from 'next/link';\nimport 'isomorphic-unfetch';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {data, error} = useSWR('https://api.tvmaze.com/search/shows?q=batman', fetcher);\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n  console.log(data)\n  let shows = [], emptyData = '';\n  if (data){\n    emptyData = '';\n    shows = data.map(entry => entry.show)\n  } else {\n    emptyData = 'Loading...';\n  }\n\n  //if (!data) quote = 'Loading...';\n  //if (error) quote = 'Failed to fetch the quote.';\n\n  return (\n    <Layout>\n      <h1>Batman TV Shows</h1>\n      <ul>\n        {shows.map(show => (\n          <li key={show.id}>\n            <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n              <a>{show.name}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <style jsx>{`\n        h1,\n        a {\n          font-family: 'Arial';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n          margin: 5px 0;\n        }\n\n        a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        a:hover {\n          opacity: 0.6;\n        }\n      `}</style>\n    </Layout>)\n}\n\n/*Index.getInitialProps = async function() {\n\n  const { res, error } = await getData();\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};*/\n\n"]},"metadata":{},"sourceType":"module"}